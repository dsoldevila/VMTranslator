//BootStrap Code
@256
D=A
@SP
M=D
//Call Sys.init 0
@Bootstrap$ret.1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@0
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.init
D;JMP
(Bootstrap$ret.1)
//Function Class1.set 0
(Class1.set)
//Push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Pop static 0
@SP
AM=M-1
D=M
@Class1.0
M=D
//Push argument 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Pop static 1
@SP
AM=M-1
D=M
@Class1.1
M=D
//Push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Return
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//Pop temp 0
@SP
AM=M-1
D=M
@5
M=D
@5
D=M
D=D-A
A=D
D=M
@6
M=D
//Pop argument 0
@ARG
D=M
@0
D=A+D
@SP
A=M
M=D
@SP
AM=M-1
D=M
@SP
A=M+1
A=M
M=D
@ARG
D=M
@1
D=D+A
@SP
M=D
//r_that
@5
D=M
@1
A=D-A
D=M
@THAT
M=D
//r_this
@5
D=M
@2
A=D-A
D=M
@THIS
M=D
//r_arg
@5
D=M
@3
A=D-A
D=M
@ARG
M=D
//r_lcl
@5
D=M
@4
A=D-A
D=M
@LCL
M=D
@6
A=M
D;JMP
//Function Class1.get 0
(Class1.get)
//Push static 0
@Class1.0
D=M
@SP
A=M
M=D
@SP
M=M+1
//Push static 1
@Class1.1
D=M
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
AM=M-1
D=M
A=A-1
M=M-D
//Return
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//Pop temp 0
@SP
AM=M-1
D=M
@5
M=D
@5
D=M
D=D-A
A=D
D=M
@6
M=D
//Pop argument 0
@ARG
D=M
@0
D=A+D
@SP
A=M
M=D
@SP
AM=M-1
D=M
@SP
A=M+1
A=M
M=D
@ARG
D=M
@1
D=D+A
@SP
M=D
//r_that
@5
D=M
@1
A=D-A
D=M
@THAT
M=D
//r_this
@5
D=M
@2
A=D-A
D=M
@THIS
M=D
//r_arg
@5
D=M
@3
A=D-A
D=M
@ARG
M=D
//r_lcl
@5
D=M
@4
A=D-A
D=M
@LCL
M=D
@6
A=M
D;JMP
//Function Class2.set 0
(Class2.set)
//Push argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Pop static 0
@SP
AM=M-1
D=M
@Class2.0
M=D
//Push argument 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//Pop static 1
@SP
AM=M-1
D=M
@Class2.1
M=D
//Push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Return
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//Pop temp 0
@SP
AM=M-1
D=M
@5
M=D
@5
D=M
D=D-A
A=D
D=M
@6
M=D
//Pop argument 0
@ARG
D=M
@0
D=A+D
@SP
A=M
M=D
@SP
AM=M-1
D=M
@SP
A=M+1
A=M
M=D
@ARG
D=M
@1
D=D+A
@SP
M=D
//r_that
@5
D=M
@1
A=D-A
D=M
@THAT
M=D
//r_this
@5
D=M
@2
A=D-A
D=M
@THIS
M=D
//r_arg
@5
D=M
@3
A=D-A
D=M
@ARG
M=D
//r_lcl
@5
D=M
@4
A=D-A
D=M
@LCL
M=D
@6
A=M
D;JMP
//Function Class2.get 0
(Class2.get)
//Push static 0
@Class2.0
D=M
@SP
A=M
M=D
@SP
M=M+1
//Push static 1
@Class2.1
D=M
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
AM=M-1
D=M
A=A-1
M=M-D
//Return
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//Pop temp 0
@SP
AM=M-1
D=M
@5
M=D
@5
D=M
D=D-A
A=D
D=M
@6
M=D
//Pop argument 0
@ARG
D=M
@0
D=A+D
@SP
A=M
M=D
@SP
AM=M-1
D=M
@SP
A=M+1
A=M
M=D
@ARG
D=M
@1
D=D+A
@SP
M=D
//r_that
@5
D=M
@1
A=D-A
D=M
@THAT
M=D
//r_this
@5
D=M
@2
A=D-A
D=M
@THIS
M=D
//r_arg
@5
D=M
@3
A=D-A
D=M
@ARG
M=D
//r_lcl
@5
D=M
@4
A=D-A
D=M
@LCL
M=D
@6
A=M
D;JMP
//Function Sys.init 0
(Sys.init)
//Push constant 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//Push constant 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call Class1.set 2
@Sys.init$ret.1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@2
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Class1.set
D;JMP
(Sys.init$ret.1)
//Pop temp 0
@SP
AM=M-1
D=M
@5
M=D
//Push constant 23
@23
D=A
@SP
A=M
M=D
@SP
M=M+1
//Push constant 15
@15
D=A
@SP
A=M
M=D
@SP
M=M+1
//Call Class2.set 2
@Sys.init$ret.2
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@2
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Class2.set
D;JMP
(Sys.init$ret.2)
//Pop temp 0
@SP
AM=M-1
D=M
@5
M=D
//Call Class1.get 0
@Sys.init$ret.3
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@0
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Class1.get
D;JMP
(Sys.init$ret.3)
//Call Class2.get 0
@Sys.init$ret.4
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@0
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Class2.get
D;JMP
(Sys.init$ret.4)
//Label
(Sys.init$WHILE)
//Goto
@Sys.init$WHILE
D;JMP
